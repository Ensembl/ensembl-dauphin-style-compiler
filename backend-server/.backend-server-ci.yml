stages:
  - build_docker
  - deploy

variables:
  DOCKER_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}
  DOCKER_TLS_CERTDIR: ""
  BASE: backend-server/k8s/base

.build:
  stage: build_docker
  image: docker
  services:
    - docker:dind

  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - cd backend-server

  script:
    - docker build -t ${DOCKER_IMAGE} --no-cache .
    - docker push ${DOCKER_IMAGE}
    - docker rmi ${DOCKER_IMAGE}
    - docker logout $CI_REGISTRY

  rules:
    - if: '$CI_DEPLOY_FREEZE == null && $CI_COMMIT_BRANCH == "deploy2envs"'
      changes: 
        - backend-server/*

.deploy:
  stage: deploy
  image: dockerhub.ebi.ac.uk/ensembl-web/deploy-tools:0.4
  script:
    # Update hi configuration
    - cd ${BASE}/hi
    - kustomize edit set image DOCKER_IMAGE=${DOCKER_IMAGE}
    - kustomize edit set label "gbtype":"hi"
    - kustomize edit set namesuffix -- -hi
    - cd -

    # Update lo configuration
    - cd ${BASE}/lo
    - kustomize edit set image DOCKER_IMAGE=${DOCKER_IMAGE}
    - kustomize edit set label "gbtype":"lo"
    - kustomize edit set namesuffix -- -lo
    - cd -

    # Update hi/lo configuration
    - kustomize build ${BASE}/hi | kubectl apply -f -
    - kustomize build ${BASE}/lo | kubectl apply -f -

  rules:
    - if: '$CI_DEPLOY_FREEZE == null && $CI_COMMIT_BRANCH == "deploy2envs"'
      changes: 
        - backend-server/*

Docker:
  extends: .build

WP-HX:Dev:
  extends: .deploy
  environment:
    name : wp-hx-dev
  variables:
    BASE: backend-server/k8s/overlays/dev

WP-HX:Staging:
  extends: .deploy
  environment:
    name : wp-hx-staging
  variables:
    BASE: backend-server/k8s/overlays/staging
    
WP-HX:Staging:
  extends: .deploy
  environment:
    name : wp-hh-staging
  variables:
    BASE: backend-server/k8s/overlays/staging

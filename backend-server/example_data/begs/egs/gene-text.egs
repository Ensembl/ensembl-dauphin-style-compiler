import "lib:std"; use "std";
import "lib:peregrine"; use "peregrine";

//notice("gene-text 2020-09-02 23:29");

/* 
 * actually get the data from the server
 */

data := get_data("self()","gene",get_panel());

/*
 * undo the compression applied by the server basically by applying
 * the transforms applied there in reverse order.
 */

gene_id := string_seq(data,"gene_ids");
gene_name := string_seq(data,"gene_names");
gene_desc := string_seq(data,"gene_descs");
start := delta_seq(data,"starts");
end := start + delta_seq(data,"lengths");
gene_designation := classified_seq(data,"gene_designation_keys","gene_designation_values");
gene_biotype := classified_seq(data,"gene_biotype_keys","gene_biotype_values");
strand := positive_seq(data,"strands");
designated_transcript_id := string_seq(data,"designated_transcript_ids");

/*
 * sort out which allotment and track the data goes into.
 *
 * There are separate allotments for protein_coding and non-protein_coding
 * and also for forward and reverse strand. As usual there is a fifth 
 * allotment for a focus-feature.
 *
 * For the data on each allotment there are currently two tracks: the
 * main data and the labels.
 */

notice(format(gene_biotype));
into_pc_allotment := [""];

/*
 * draw the data.
 */

// the main rectangles
rectangle_on_genome(start,end,5);


//notice(format([start]));
//notice(format([end]));
//notice(format(gene_designation));


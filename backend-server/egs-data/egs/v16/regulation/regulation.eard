program "ensembl-webteam/core" "regulation" 1;
refer "libperegrine";
refer "libeoe";
include "../common/track-common.eard";
include "../common/track-style.eard";
include "regulation-common.eard";
include "regulation-zmenu.eard";

/* Setup styles */
track_styles();
regulation_track_styles();


let *reg_feature = get_regulation_track_data("regulation", "This is the name of the regulation track");
halt(only_warm());

draw_regulatory_features(*reg_feature);
draw_track_furniture();


/* Draw zmenus */
let (core_height, bounds_height, bounds_top_offset) = get_shape_sizes();

let is_bounds_same_as_core = reg_feature.start == reg_feature.thick_start &&
        reg_feature.end == reg_feature.thick_end;

/* Zmenus for simple features — where core region is same as boundaries */
let zmenu_paint = zmenu_when_bounds_same_as_core(*reg_feature);
let zmenu_leaf = reg_feature.leaf;
let zmenu_leaf = set(zmenu_leaf, !is_bounds_same_as_core, [leaf(""), ...]);

rectangle(
    coord(reg_feature.start, [0,...], [0,...]),
    coord(reg_feature.end, [core_height,...], [0,...]),
    zmenu_paint,
    zmenu_leaf
);

/* Zmenus for more complex features — where core region is inside boundaries */
let zmenu_paint = zmenu_when_bounds_different_from_core(*reg_feature);
let zmenu_leaf = reg_feature.leaf;
let zmenu_leaf = set(zmenu_leaf, is_bounds_same_as_core, [leaf(""), ...]);

rectangle(
    coord(reg_feature.start, [0,...], [0,...]),
    coord(reg_feature.end, [core_height,...], [0,...]),
    zmenu_paint,
    zmenu_leaf
);

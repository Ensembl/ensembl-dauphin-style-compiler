program "ensembl-webteam/core" "focus-transcript" 1;
refer "libperegrine";
refer "libeoe";
include "../common/track-common.eard";
include "../common/track-style.eard";
include "gene-common-data.eard";
include "gene-common-visual.eard";
include "gene-common-zmenu.eard";
include "transcript-common.eard";

/* Set styles */

track_styles();
gene_styles();
transcript_styles();

/* Get data */

let enabled_track = enabled_focus_gene_track();
let enabled_labels = enabled_track && enabled_focus_gene_labels();

let (focus_genome_id,focus_gene_id) = focus_gene_settings();

let (*gene,*tr,*exon) = get_focus_transcript_data();

/* Map from gene to focus gene */
// XXX and if it isn't here?

let **tr_gene = index(**gene,tr.index_of_gene);

let focus_gene_index = index(position(focus_gene_id==gene.id_unversioned),0); 
let **focus_gene = index(**gene,focus_gene_index);

/* Make leafs */

let gene.leaf_index = repeat(0,len(gene.start));
let tr_gene.leaf_index = repeat(0,len(tr.start));
let tr.leaf_index = tr_gene.leaf_index;

let (shown_tr,last_tr,tr.position) = calc_focus_shown_transcripts(*tr);
let gene.leaf_base = make_focus_gene_leaf_base(*gene);
let *leaf_tr = tr_focus_gene_leafs(*gene,*tr,shown_tr);

let **exon_tr = index(**tr,exon.index_of_tr);
let **leaf_exon_tr = index(**leaf_tr,exon.index_of_tr);

/* Draw! */

let focus_blue = colour!("#279afc");

/* Draw solid lines (no endstops on focus tracks!) */

let y = tr.position * 20;
let paint = paint_solid(focus_blue);
rectangle(coord(tr.start,y+5,[0,...]),coord(tr.end,y+6,[0,...]),paint,leaf_tr.under_leaf);

/* Draw dotted lines */

let *dots = calc_outside_of_tr(*tr_gene,*tr,*leaf_tr);
let **dots_tr = index(**tr,dots.tr);

let y = dots_tr.position * 20;
let colours = index(gene_colours(),dots.leaf_index);
let paint = paint_dotted([colour!("white"),...],[focus_blue,...],4,0,0.5);
rectangle(coord(dots.start,y+5,[0,...]),coord(dots.end,y+5,[0,...]),paint,dots.leaf);

/* Draw hollow and blanking exons */

let y = exon_tr.position * 20;
let paint = paint_hollow(focus_blue,3);
rectangle(coord(exon.start,y+2,[0,...]),coord(exon.end,y+8,[0,...]),paint,leaf_exon_tr.over_leaf);
let paint = paint_solid(colour!("white"));
rectangle(coord(exon.start,y+2,[0,...]),coord(exon.end,y+8,[0,...]),paint,leaf_exon_tr.blanking_leaf);

/* Draw solid exons */

let *thick_exon = generate_thick_exons(*tr,*exon_tr,*exon);
let **thick_exon_tr = index(**exon_tr,thick_exon.index_of_exon);

let thick_exon.far_over_leaf = index(leaf_exon_tr.far_over_leaf,thick_exon.index_of_exon);
let y = thick_exon_tr.position * 20;
let paint = paint_solid(focus_blue);
rectangle(coord(thick_exon.start,y+2,[0,...]),coord(thick_exon.end,y+8,[0,...]),paint,thick_exon.far_over_leaf);

/* Draw labels */

let text = tr_label_text(*gene,*tr_gene,*tr,last_tr,enabled_focus_gene_labels(),enabled_focus_transcript_labels());
let y = tr.position * 20;
let pen = pen("'IBM Plex Mono', sans-serif",10,[colour!("#6f81ff"),...],[colour!("transparent"),...]);
running_text(coord(tr_gene.start,y+10,[0,...]),coord(tr_gene.end,y+10,[0,...]),pen,text,leaf_tr.text_leaf);

/* Draw zmenus */

emit_focus_tr_zmenu(*tr_gene,*tr,*leaf_tr,20);

/* Draw track furniture */

let leaf.bgd = make_focus_gene_leaf("main/background/content",enabled_track);
let leaf.trackname = make_focus_gene_leaf("title/content",enabled_track);
let leaf.letter = make_focus_gene_leaf("main/letter/content",enabled_track);

draw_track_category(["G"],["focus"],[leaf.letter]);
draw_track_name(join(" ",[focus_gene.name,focus_gene_id]),"name",leaf.trackname);
draw_swatch(colour!("#58a8f9"),[leaf.letter]);

/* Draw chevrons */

draw_focus_track_chevrons(index(gene.strand,focus_gene_index),*leaf);
draw_focus_sidebar_chevrons(index(gene.strand,focus_gene_index),*leaf);

/* Metadata reports */

let shown_tr_names = select(tr.id_versioned,shown_tr);
let paint = paint_metadata("transcripts-shown",shown_tr_names,eoe_string(shown_tr_names));
let enough_zeros = repeat(0,len(shown_tr_names));
let enough_ones = repeat(1,len(shown_tr_names));
rectangle(coord(enough_zeros,[0,...],[0,...]),coord(enough_ones,[0,...],[0,...]),paint,[leaf.bgd,...]);

let paint = paint_metadata("all-transcripts",tr.id_versioned,eoe_string(tr.id_versioned));
let enough_zeros = repeat(0,len(tr.id_versioned));
let enough_ones = repeat(1,len(tr.id_versioned));
rectangle(coord(enough_zeros,[0,...],[0,...]),coord(enough_ones,[0,...],[0,...]),paint,[leaf.bgd,...]);

let paint = paint_metadata("id",[""],[eoe_string(focus_gene_id)]);
rectangle(coord([0],[0,...],[0,...]),coord([1],[0,...],[0,...]),paint,[leaf.bgd,...]);

let paint = paint_metadata("transcripts-suppressed",[""],[eoe_boolean(false)]);
rectangle(coord([0],[0,...],[0,...]),coord([1],[0,...],[0,...]),paint,[leaf.bgd,...]);

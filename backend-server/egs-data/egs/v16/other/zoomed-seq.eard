program "ensembl-webteam/core" "zoomed-seq" 1;
refer "libperegrine";
refer "libeoe";
include "../common/track-common.eard";
include "../common/track-style.eard";

/* Setup styles */

track_styles();

style!("""
    tracks/track/contig/ {
        min-height: 50;
        priority: 0;
        report: "track;switch-id=contig";
    }
""");

/* Get settings and data */

let data = get_data(request("self()","zoomed-seq"));
halt(only_warm());

let sequence = data_string(data,"sequence");
let sequence_rev = base_flip(sequence);
let sequence_start = index(data_number(data,"sequence_start"),0);

/* Do maths to extract sequence position and letters from what we got from the backend */

let (bp_start,bp_end) = bp_range();
let letter_bp = enumerate([bp_end-bp_start+1]) + bp_start; // bp of letter in seq to draw
let letter_offset = letter_bp - sequence_start; // offset of letter in seq
let seq_letter_fwd = index(sequence,letter_offset); // letters to draw (forward)
let seq_letter_rev = index(sequence_rev,letter_offset); // letters to draw (reverse)

/* Draw the letters */

let base_pen = pen("'IBM Plex Mono', sans-serif",10,[colour!("#6f8190"),...],[colour!("transparent"),...]);
let letters_leaf = leaf("tracks/track/contig/main/main/content");
let base_paint = paint_hollow(colour!("#6f8190"),1);
let base_height = 10;

procedure draw_base(position,letters,offset) {
    capture base_pen, letters_leaf, base_paint, base_height;

    let text_coord = coord(position+0.5,[offset+1,...],[-3.5,...]);
    text(text_coord,base_pen,letters,[letters_leaf,...]);
}

draw_base(letter_bp,seq_letter_fwd,0);
draw_base(letter_bp,seq_letter_rev,14);

/* draw track furniture */

draw_track_name("Reference sequence","name",leaf("tracks/track/contig/title/content"));
draw_track_category(["G"],["contig"],[leaf("tracks/track/contig/main/letter/content")]);

program "ensembl-webteam/core" "tssp" 1;
refer "libperegrine";
refer "libeoe";
include "../common/track-common.eard";
include "../common/track-style.eard";

/* setup styles */
let track_id = setting_string("track_id", []);
let track_display_order = setting_string("display_order", []);
track_styles();
new_track_style(track_id, track_display_order);
set_track_style(track_id, "main/main/", ["type"], ["stack"]);
set_track_style(track_id, "main/main/lanes/", ["type", "priority"], ["stack", "1"]);
set_track_style(track_id, "main/main/lanes/first/", ["min-height", "priority"], ["10", "0"]);
set_track_style(track_id, "main/main/lanes/second/", ["min-height", "priority"], ["10", "1"]);
set_track_style(track_id, "main/main/lanes/third/", ["min-height", "priority"], ["10", "2"]);

/* get data */
let track_datafile = setting_string("datafile", []);
let req = request("self()","tssp");
scope(req, "datafile", track_datafile);
let data = get_data(req);
halt(only_warm());

let start = data_number(data,"start");
let end = data_number(data,"end");
let analysis_type = data_string(data,"analysis");

/* set colours */
let is_cpg = analysis_type == "cpg";
let is_tss = analysis_type == "eponine";
let is_trna = analysis_type == "trnascan";

let cpg_colour = colour!("#ffc0cb"); // pink
let tss_colour = colour!("#00ff00"); // green
let trna_colour = colour!("#ff0000"); // red

let colours_seq = repeat(cpg_colour, len(analysis_type));
let colours_seq = set(colours_seq, is_tss, [tss_colour, ...]);
let colours_seq = set(colours_seq, is_trna, [trna_colour, ...]);

/* set lanes */
let top_leaf = track_leaf(track_id,"main/main/lanes/first/content");
let middle_leaf = track_leaf(track_id,"main/main/lanes/second/content");
let bottom_leaf = track_leaf(track_id,"main/main/lanes/third/content");
let lane_leafs = repeat(top_leaf, len(analysis_type));
let lane_leafs = set(lane_leafs, analysis_type=="eponine", [middle_leaf,...]);
let lane_leafs = set(lane_leafs, analysis_type=="trnascan", [bottom_leaf,...]);

/* draw rectangles */
let paint = paint_solid(colours_seq);
let leaf = track_leaf(track_id,"main/main/content");
rectangle(coord(start,[8,...],[0,...]), coord(end,[16,...],[0,...]), paint, lane_leafs);

/* draw track furniture */
let track_name = setting_string("track_name", []);
draw_track_name(track_name, "name", track_leaf(track_id,"title/content"));
draw_track_category(["G"], [track_id], [track_leaf(track_id,"main/letter/content")]);
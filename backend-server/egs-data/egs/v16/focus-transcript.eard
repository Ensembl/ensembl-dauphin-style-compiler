program "ensembl-webteam/core" "focus-transcript" 1;
refer "libperegrine";
refer "libeoe";
include "track-common.eard";
include "track-style.eard";
include "gene-common-data.eard";
include "gene-common-visual.eard";
include "gene-common-zmenu.eard";
include "transcript-common.eard";

/* Set styles */

track_styles();
gene_styles();
transcript_styles();

/* Get data */

let enabled_track = enabled_focus_gene_track();
let enabled_labels = enabled_track && enabled_focus_gene_labels();

let (focus_genome_id,focus_gene_id) = focus_gene_settings();

let (*gene,*tr,*exon) = get_focus_transcript_data();

/* Map from gene to focus gene */
// XXX and if it isn't here?

let **tr_gene = index(**gene,tr.index_of_gene);

let focus_gene_index = index(position(focus_gene_id==gene.id_unversioned),0); 
let **focus_gene = index(**gene,focus_gene_index);

/* Make leafs */

let gene.leaf_index = repeat(0,len(gene.start));
let tr_gene.leaf_index = repeat(0,len(tr.start));
let tr.leaf_index = tr_gene.leaf_index;

let (shown_tr,last_tr) = calc_shown_transcripts(*tr,focus_enabled_several_transcripts());
let gene.leaf_base = make_focus_gene_leaf_base(*gene);
let *leaf_tr = tr_focus_gene_leafs(*gene,*tr,shown_tr);

let **exon_tr = index(**tr,exon.index_of_tr);
let **leaf_exon_tr = index(**leaf_tr,exon.index_of_tr);

/* Draw! */

let focus_blue = colour!("#279afc");

/* Draw solid lines (no endstops on focus tracks!) */

let y = tr.position_in_gene * 20;
let paint = paint_solid(focus_blue);
rectangle(coord(tr.start,y+5,[0,...]),coord(tr.end,y+6,[0,...]),paint,leaf_tr.under_leaf);

/* Draw dotted lines */

let *dots = calc_outside_of_tr(*tr_gene,*tr,*leaf_tr);

let y = dots.position_in_gene * 20;
let colours = index(gene_colours(),dots.leaf_index);
let paint = paint_dotted([colour!("white"),...],[focus_blue,...],4,0,0.5);
rectangle(coord(dots.start,y+5,[0,...]),coord(dots.end,y+5,[0,...]),paint,dots.leaf);

/* Draw hollow and blanking exons */

let y = exon.tr_position_in_gene * 20;
let paint = paint_hollow(focus_blue,3);
rectangle(coord(exon.start,y+2,[0,...]),coord(exon.end,y+8,[0,...]),paint,leaf_exon_tr.over_leaf);
let paint = paint_solid(colour!("white"));
rectangle(coord(exon.start,y+2,[0,...]),coord(exon.end,y+8,[0,...]),paint,leaf_exon_tr.blanking_leaf);

/* Draw solid exons */

let *thick_exon = generate_thick_exons(*tr,*exon_tr,*exon);
let thick_exon.far_over_leaf = index(leaf_exon_tr.far_over_leaf,thick_exon.index_of_exon);
let y = thick_exon.tr_position_in_gene * 20;
let paint = paint_solid(focus_blue);
rectangle(coord(thick_exon.start,y+2,[0,...]),coord(thick_exon.end,y+8,[0,...]),paint,thick_exon.far_over_leaf);

/* Draw labels */

let text = tr_label_text(*gene,*tr_gene,*tr,last_tr,enabled_focus_gene_labels(),enabled_focus_transcript_labels());
let y = tr.position_in_gene * 20;
let pen = pen("'IBM Plex Mono', sans-serif",10,[colour!("#6f81ff"),...],[colour!("transparent"),...]);
running_text(coord(tr_gene.start,y+10,[0,...]),coord(tr_gene.end,y+10,[0,...]),pen,text,leaf_tr.text_leaf);

/* Draw zmenus */

emit_tr_zmenu(*tr_gene,*tr,*leaf_tr,20);

/* Draw track furniture */

let leaf.bgd = make_focus_gene_leaf("main/background/content",enabled_track);
let leaf.trackname = make_focus_gene_leaf("title/content",enabled_track);
let leaf.letter = make_focus_gene_leaf("main/letter/content",enabled_track);

draw_track_category(["G"],["focus"],[leaf.letter]);
draw_track_name(join(" ",[focus_gene.name,focus_gene_id]),"name",leaf.trackname);
draw_swatch(colour!("#58a8f9"),[leaf.letter]);

/* Draw chevrons */

draw_focus_track_chevrons(index(gene.strand,focus_gene_index),*leaf);
draw_focus_sidebar_chevrons(index(gene.strand,focus_gene_index),*leaf);

// /* check if on current stick */
// this_stick := get_region().stick;
// on_another_stick := (stick == this_stick) == false;

// enabled_gene_labels := setting_yn("focus-gene-label");
// enabled_transcript_labels := setting_yn("focus-transcript-label");

// calc_focus_transcripts_shown(is_ghosted,bool_report_show_tr,bool_show_tr,id_gn_vr,id_tr_vr,which_gn_by_tr,id_gn_uv,focus_gene_id,idx_tr_in_gn);

// /* index the rest (by gene) */
// drawn_tr_gn := which_gn_by_tr;
// drawn_tr_gn#[bool_show_tr==false] := -1;
// idx_drawn_tr_gn := nth(drawn_tr_gn);

// num_drawn_tr_gn := count(drawn_tr_gn,len([id_gn_vr]));

// idx_tr_in_gn_by_ex :=  index(which_tr_by_ex,[idx_drawn_tr_gn]);
// idx_tr_in_gn_by_thex := idx_tr_in_gn_by_ex#[thick_exons];

// allotment_label := use_allotment("tracks/track/focus/title/content");
// allotment_letter := use_allotment("tracks/track/focus/main/letter/content");
// allotment_wallpaper := use_allotment("tracks/track/focus/main/background/content");
// allotment_dotted := use_allotment("dots/content");
// allotment_dotted_text := use_allotment("tracks/flagtop/main");

// base_allotment := append_group("tracks/track/focus/main/main",focus_gene_id);

// al_under_by_gn := len([id_gn_vr]) (*) "";
// al_under_by_gn#[id_gn_uv==focus_gene_id] := append_group(base_allotment,"diagram/under");

// al_under_by_tr := len([id_tr_vr]) (*) "";
// al_under_by_tr#[bool_show_tr] := append_group(base_allotment,"diagram/under");

// al_over_by_tr := len([id_tr_vr]) (*) "";
// al_over_by_tr#[bool_show_tr] := append_group(base_allotment,"diagram/over");
// al_over_by_ex := index(which_tr_by_ex,[al_over_by_tr]);

// al_blanking_by_tr := len([id_tr_vr]) (*) "";
// al_blanking_by_tr#[bool_show_tr] := append_group(base_allotment,"diagram/blanking");
// al_blanking_by_ex := index(which_tr_by_ex,[al_blanking_by_tr]);

// al_farover_by_tr := len([id_tr_vr]) (*) "";
// al_farover_by_tr#[bool_show_tr] := append_group(base_allotment,"diagram/far-over");
// al_farover_by_ex := index(which_tr_by_ex,[al_farover_by_tr]);
// al_farover_by_thex := al_farover_by_ex#[thick_exons];

// al_text_by_gn := len([id_gn_vr]) (*) "";
// al_text_by_gn#[id_gn_uv==focus_gene_id] := append_group(base_allotment,"text");

// al_label_by_gn := len([id_gn_vr]) (*) "";
// al_label_by_gn#[id_gn_uv==focus_gene_id] := append_group(base_allotment,"text");
// al_label_by_gn := use_allotment(al_label_by_gn);

// al_trtext_by_tr := use_allotment(index(which_gn_by_tr,[al_text_by_gn]));

// al_trtext_by_tr#[bool_show_tr==false] := use_allotment("");

// al_text_by_gn#[enabled_gene_labels==false] := "";
// al_trtext_by_tr#[enabled_transcript_labels==false] := use_allotment("");

// al_button := len([id_gn_vr]) (*) "";
// al_button#[id_gn_uv==focus_gene_id] := append_group(base_allotment,"button");

// al_under_by_tr := use_allotment(al_under_by_tr);
// al_under_by_gn := use_allotment(al_under_by_gn);
// al_over_by_tr := use_allotment(al_over_by_tr);
// al_over_by_ex := use_allotment(al_over_by_ex);
// al_blanking_by_ex := use_allotment(al_blanking_by_ex);
// al_farover_by_thex := use_allotment(al_farover_by_thex);
// al_button := use_allotment(al_button);

// expanded_genes := setting_string("expanded",[][]);

// /* 
//  * focus object
//  */

// start_focus := start_gn#[id_gn_uv==focus_gene_id];
// end_focus := end_gn#[id_gn_uv==focus_gene_id];

// /*
//  * What colour? What font? etc
//  *
//  * (driven by allotment for gene)
//  */

// base_focus_colour := direct_colour(39,154,252,255);
// ghost_focus_colour := direct_colour(200,228,252,255);
// base_focus_colour#[is_ghosted] := ghost_focus_colour;


// dotted_focus_colour := barred(direct_colour(255,255,255,255),base_focus_colour,4,0,0.5);
// focus_colour := simple_colour(base_focus_colour);

// pt_under_by_tr := patina_filled(focus_colour);
// pt_hollow_by_ex := patina_hollow(focus_colour,1);
// pt_white := patina_filled(simple_colour(direct_colour(255,255,255,255)));
// pt_thick_by_thex := patina_filled(focus_colour);
// text_colour := direct_colour(111,129,144,255);

// white_text_colour := direct_colour(255,255,255,255);
// blue_text_colour := direct_colour(111,129,255,255);
// blue_text_colour#[is_ghosted] := direct_colour(255,255,144,255);
// text_size := 10;

// textpen := pen("'IBM Plex Mono', sans-serif",text_size,text_colour,[][]);
// textpen_blue := pen("'IBM Plex Mono', sans-serif",text_size,blue_text_colour,[][]);
// blue_text_bgd := background(blue_text_colour,true);
// textpen_lozenge := pen("'IBM Plex Mono', sans-serif",text_size*1.2,white_text_colour,blue_text_bgd);

// allotment_wallpaper#[on_another_stick] := use_allotment("");
// allotment_dotted#[on_another_stick] := use_allotment("");
// allotment_dotted_text#[on_another_stick] := use_allotment("");
// al_under_by_tr#[on_another_stick] := use_allotment("");
// al_under_by_gn#[on_another_stick] := use_allotment("");
// al_over_by_tr#[on_another_stick] := use_allotment("");
// al_over_by_ex#[on_another_stick] := use_allotment("");
// al_blanking_by_ex#[on_another_stick] := use_allotment("");
// al_farover_by_thex#[on_another_stick] := use_allotment("");
// al_button#[on_another_stick] := use_allotment("");
// al_trtext_by_tr#[on_another_stick] := use_allotment("");
// al_label_by_gn#[on_another_stick] := use_allotment("");

// /* blue button */
// //draw_lozenges(start_gn,num_drawn_tr_gn,id_gn_uv,expanded_genes,al_button);

// /* report transcripts shown */
// report_allotment := use_allotment("tracks/track/focus/main/background/content");
// report_shown(bool_report_show_tr,id_tr_vr,report_allotment);
// report_id(focus_gene_id,report_allotment);
// report_all(id_tr_vr,id_gn_uv,focus_gene_id,which_gn_by_tr,report_allotment);
// report_suppressed(false,report_allotment);

export procedure track_styles() {
  style!("""

  dots/ {
    system: tracking-window; # x-scrollable, bp position units, y-attached to viewport
    depth: 56; # z-index (-128..128)
  }

  tracks/ {  # child containers in main tracks container
    padding-top: 16;
    priority: 1; # vertical stacking order (of sibling containers)
    depth: 0;
  }

  tracks/flagtop/ {
    min-height: 32;
    priority: 0;
    system: tracking; # x-scrollable, position in bp
  }

  tracks/track/ {
    padding-top: 10;
    priority: 1;
  }

  tracks/track/*/ {
    min-height: 80;
    height-adjust: tracking;
  }

  tracks/track/*/title/ {
    system: content; # stays in place, position 0..1
    type: overlay; # draws over other track elements
    indent: left;
    padding-top: 2;
    padding-bottom: 10;
    priority: -1000; # top of stack
  }

  tracks/track/*/main/ {
    type: overlay;
    priority: 0;
  }

  tracks/track/*/main/letter/ {
    system: content;
    bump-height: none;
    indent: datum(pad-left); # variable (see framing.eard)
    depth: 60;
  }

  tracks/track/*/title/letter/ {
    system: content;
    indent: datum(pad-left);
    depth: 60;
  }

  tracks/track/*/main/main/ {
    system: tracking;
    priority: 1000; # bottom of stack (of sibling containers)
  }

  tracks/track/*/main/background/ {
    system: content;
  }

  """);
}

export procedure set_track_style(track_id, path_suffix, style_names, style_values) {
  let leaf_path = join("/", ["tracks/track", track_id, path_suffix]);
  style(leaf_path, style_names, style_values);
}

export procedure new_track_style(track_id, display_order) {
  set_track_style(track_id, "", ["priority", "report"], [display_order, push_str("track;switch-id=", track_id)]);
}

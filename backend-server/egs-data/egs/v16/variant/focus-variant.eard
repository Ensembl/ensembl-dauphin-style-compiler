program "ensembl-webteam/core" "focus-variant" 1;
refer "libperegrine";
refer "libeoe";
include "../common/track-common.eard";
include "../common/track-style.eard";
include "variant-common.eard";

/* Setup styles */

track_styles();

style!("""
        tracks/track/focus/ {
            priority: -900;
            report: "track;switch-id=focus;has-labels=true;!id";
        }

        tracks/track/focus/ {
            priority: -900;
            report: "track;switch-id=focus;has-labels=true;!id";
        }

        tracks/track/focus/main/main/sun/ {
            type: overlay;
            priority: -1;
        }

        tracks/track/focus/main/main/shore/ {
            type: overlay;
            priority: 0;
        }

        tracks/track/focus/main/main/shore/under/ {
            depth: 0;
        }

        tracks/track/focus/main/main/shore/over/ {
            depth: 1;
        }
""");

/* Get settings */

let (focus_genome_id,focus_variant_id) = focus_variant_settings();

/* Get data data */

let data = get_data(request("self()","variant-labels"));
let start = data_number(data,"start");
let id = data_string(data,"id");
let severity = data_number(data,"severity");

halt(only_warm());


/* Setup leafs */

function focus_leaf(path) {
    capture focus_genome_id;

    // XXX need someway of detecting what CHR we are on, but that needs data.
    leaf(path)
}

let leaf.bgd = focus_leaf("tracks/track/focus/main/background/content");
let leaf.text = focus_leaf(if(setting_boolean("focus-gene-label",[]),"tracks/track/focus/main/main/focus/text/content",""));
let leaf.letter = focus_leaf("tracks/track/focus/main/letter/content");
let leaf.trackname = focus_leaf("tracks/track/focus/title/content");
let leaf.shore_under = focus_leaf("tracks/track/focus/main/main/shore/under/content");
let leaf.shore_over = focus_leaf("tracks/track/focus/main/main/shore/over/content");
let leaf.sun = focus_leaf("tracks/track/focus/main/main/sun/content");

/* Draw shore */

let base_height = 7;

let paint = paint_solid(index(variant_colours(),severity));
let nw = coord(start,[0,...],[2,...]);
let se = coord(start+1,[base_height,...],[-2,...]);
rectangle(nw,se,paint,[leaf.shore_over,...]);

let (bp_start,bp_end) = bp_range();
let position = enumerate([bp_end-bp_start+1]) + bp_start;
let nw = coord(position,[0,...],[2,...]);
let se = coord(position+1,[base_height,...],[-2,...]);
let paint = paint_hollow(colour!("#999"),0);
rectangle(nw,se,paint,[leaf.shore_under,...]);

/* Draw sun */

let pen = pen("'IBM Plex Mono', sans-serif",10,[colour!("red"),...],[colour!("transparent"),...]);
text(coord(start,[0,...],[0,...]),pen,id,[leaf.sun,...]);

/* Draw track furniture */

draw_track_category(["G"],["focus"],[leaf.letter]);
draw_track_name(focus_variant_id,"name",leaf.trackname);
draw_swatch(colour!("#58a8f9"),[leaf.letter]);

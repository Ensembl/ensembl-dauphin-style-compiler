# Stage name here are misleading but this has to match with what is in the backend-server
# since these ci files in subdirectory is included in parent ci file
stages:
  - build   # Build wasm files
  - deploy  # Trigger pipeline in downstream project


.base-peregrine-rules:
  rules:
    - if: '$CI_DEPLOY_FREEZE == null && $CI_COMMIT_BRANCH == "master"'
      changes:
        - peregrine-ensembl/**/*
      when: always
    - when: never

.base-peregrine-trigger-rules:
  rules:
    - if: '$CI_DEPLOY_FREEZE == null && $CI_COMMIT_BRANCH == "staging"'
      changes:
        - peregrine-ensembl/**/*
      when: always
    - when: never

# Job template to build wasm files
.build_wasm:
  extends: .base-peregrine-rules
  stage: build
  image: rust:1.57

  before_script:
    - cd peregrine-ensembl
    - curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

  script:
    - RUSTFLAGS="--cfg=console --cfg=force_show_incoming"
    - wasm-pack build --target web --release

  # Save artifacts generated by the build job
  artifacts:
    name: build_wasm_artifacts
    paths:
      - peregrine-ensembl/pkg/

# Job to build wasm files
WASM-Files:
  extends: .build_wasm

# Build node package in downstream pipeline for non-master branch
Build-npm:dev:
  extends: .base-peregrine-rules
  stage: deploy
  variables:
    # Pass branch name to downstream pipeline as a variable
    DSC_UPSTREAM_BRANCH: $CI_COMMIT_REF_NAME

  # Disabling downstream triggering until we work out strategy 
  script:
    - echo "Triggered Deploy for dev"
  needs: ["WASM-Files"]
  # Trigger pipeline in ensembl-genome-browser project for respective branch name
  #trigger:
  #  project: ensembl-web/ensembl-genome-browser
  #  branch: $CI_COMMIT_REF_NAME
  # Schedule the job only if deploy is not freezed and except master branch
  #rules:
  #  - if: '$CI_DEPLOY_FREEZE == null && $CI_COMMIT_BRANCH != "master"'
  #    changes:
  #      - peregrine-ensembl/**/*

# Build node package in downstream pipeline for master branch
# This will eventually trigger deployment on ensembl-client master branch
Build-npm:Live:
  extends: .base-peregrine-rules
  stage: deploy
  variables:
    # Pass branch name to downstream pipeline as a variable
    DSC_UPSTREAM_BRANCH: $CI_COMMIT_REF_NAME
  # Disabling downstream triggering until we work out strategy 
  script:
    - echo "Triggered Deploy for Live"
  needs: ["WASM-Files"]
  # Trigger pipeline in ensembl-genome-browser project for main branch
  #trigger:
  #  project: ensembl-web/ensembl-genome-browser
  #  branch: main
  # Schedule the job only if deploy is not freezed and for master branch only
  #rules:
  #  - if: '$CI_DEPLOY_FREEZE == null && $CI_COMMIT_BRANCH == "master"'
  #    changes:
  #      - peregrine-ensembl/**/*

# Build node package in downstream pipeline for staging branch
Build-npm:staging:
  extends: .base-peregrine-trigger-rules
  stage: deploy
  variables:
    # Pass branch name to downstream pipeline as a variable
    DSC_UPSTREAM_BRANCH: $CI_COMMIT_REF_NAME

  needs: ["WASM-Files"]
  # Trigger pipeline in ensembl-genome-browser project for respective branch name
  trigger:
    project: ensembl-web/ensembl-genome-browser
    branch: main
  #  branch: $CI_COMMIT_REF_NAME

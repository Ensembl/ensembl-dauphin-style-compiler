How I designed the variant track in the genome browser. Not necessarily the optimal SOP. Just what I did in practice.

1. Look at XD to get idea of:
   a. a suitable overall structure of leafs.
   b. the data we will need to drive the views.
   c. the scales at which we would need the various tracks.
   d. the structure of the focus payload.

Set up basic track
==================

It makes sens to draw the rudiments of the track before looking at the data as then when we get to the data, it can immediately go onto the screen for inspection.

It looks like we need a completely new track at zoomed in scales and the standard variant summary track when zoomed out but with dotted red lines. The dotted lines will closely resemble focus-region.eard. From Andrea's design it looks like ~64 (breakpoint 6) will be roughly the scale to switch over. Maybe ~32 (5): we can switch over later, if we need to.

First I create a basic eard track (with nothing in it) for the new scale; add it it to the ubild script; add the scale and the trigger to the track payload (ultimately this will be a task for the track API); and add relevant payloads to peregrine-generic/index.html for testing.

Rebuild files. Restart BE to pick up changes to track API contents.

May as well do a rust release build (rather than dev) to check all this as we won't be doing any rebuilding of the rust and it's nice if it's fast.

Result is, when zoomed into the right place, a blank track (with label containing rsid), when zoomed out a little, said track disappears completely.

Commit is "Variant track initial commit." on dev/0.6.0 95d9fae8

Falling back to summary track
=============================

To make the gb less confusing when working on the variant track, the next step is probably to copy up the variant summary track into the focus track. That involves pushing much of the current summary track into a function in an include file, so that we can reuse it and then setting up the relevant track in the track payload again.

After restart etc, stillhHave nothing at zoomed in level, but when zoomed out enough reverts to variant summary track. No dotted red lines for this yet. (Dotted lines should probably be different "track", anyway).

Commit is "Variant track, revert to summary when zoomed out" on dev/0.6.0 a5dcbc2a

Shore
=====

The variant track divides into three parts, which I'm going to call sky, shore, and sea (by analogy with a sunset over water). Next thing to do is to set up those containers in the style and then get the data sorted for the shore seems to make the most sense.

The only data used by the shore is a colour. It looks like the colour is consequence-based and so can probably use the same data as the summary track. That will do for the initial implementation, anyway. If that isn't correct all we'd need to do would be to change the sndpoint from "variant" (to something else currently unused) and add an endpoint in the BE server. We're going to do that for the sky and sea parts anyway, so if we need to do that for the shore as well in the future, just do the same thing here. In general it helps to iterate on the data and design, though, even if each part isn't quite correct initially. So we'll use the variant endpoint.

It's basically boxes like the the transcript track when zoomed in.

Commit is "Variant track, shore, initial" on dev/0.6.0
